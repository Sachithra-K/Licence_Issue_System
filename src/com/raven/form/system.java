/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.sun.glass.events.KeyEvent;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.event.KeyAdapter;
import java.util.Calendar;
import java.util.TimerTask;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.*;
import java.util.Properties;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.*;
import java.util.Properties;
import java.util.concurrent.*;
import com.sun.glass.events.KeyEvent;




/**
 *
 * @author sachi
 */
public class system extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public system() {
        initComponents();
        Connect();
        
             txtdob.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            @Override
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("date") && txtdob.getDate() != null) {
                    // Get the selected date from jDateChooser1
                    Calendar selectedDate = Calendar.getInstance();
                    selectedDate.setTime(txtdob.getDate());

                    // Add 3 years to the selected date
                    selectedDate.add(Calendar.YEAR, 3);
                     
                    // Set the updated date in jDateChooser2
                    txtadddate.setDate(selectedDate.getTime());
                }
            }
        });
    }
     
    Connection con;
     PreparedStatement pst;
     ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     
      public void Connect()
     {  
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            try {
               con = (com.mysql.jdbc.Connection)DriverManager.getConnection("jdbc:mysql://localhost/simple_student","root","");
            } catch (SQLException ex) {
                Logger.getLogger(system.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(system.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
      
        private static boolean isValidEmailFormat(String email) {
        // Define a regular expression pattern for email validation
        String regex = "^[A-Za-z0-9+_.-]+@(.+)[.]com$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
     
     
    @SuppressWarnings("unchecked")
     private static void sendEmail(String host, String user, String pass, String toAddress, String subject, String message, Session mailSession) throws Exception {
        MimeMessage mimeMessage = new MimeMessage(mailSession);
        mimeMessage.setFrom(new InternetAddress(user));
        mimeMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(toAddress));
        mimeMessage.setSubject(subject);
        mimeMessage.setText(message);

        Transport transport = mailSession.getTransport("smtp");
        transport.connect(host, user, pass);
        transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients());
        transport.close();
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtsname = new javax.swing.JTextField();
        txtfname = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtdob = new com.toedter.calendar.JDateChooser();
        txtgender = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtsectionn = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtadddate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        txtcnic = new javax.swing.JTextField();
        txtclass = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Candidate Name");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Expiry Date");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Factory Name");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Mobile Number");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Register");
        jButton1.setMaximumSize(new java.awt.Dimension(51, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(51, 26));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 520, 370, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Gender");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("NIC");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));

        txtsname.setBackground(new java.awt.Color(204, 204, 204));
        txtsname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jPanel2.add(txtsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 102, 430, -1));

        txtfname.setBackground(new java.awt.Color(204, 204, 204));
        txtfname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jPanel2.add(txtfname, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 380, -1));

        txtphone.setBackground(new java.awt.Color(204, 204, 204));
        txtphone.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphoneActionPerformed(evt);
            }
        });
        txtphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtphoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtphoneKeyTyped(evt);
            }
        });
        jPanel2.add(txtphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 250, -1));

        txtemail.setBackground(new java.awt.Color(204, 204, 204));
        txtemail.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtemailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtemailKeyTyped(evt);
            }
        });
        jPanel2.add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 260, -1));

        txtdob.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(txtdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 250, -1));

        txtgender.setBackground(new java.awt.Color(204, 204, 204));
        txtgender.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel2.add(txtgender, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 200, 270, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BR Nb");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 48, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Section");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, -1));

        txtsectionn.setBackground(new java.awt.Color(204, 204, 204));
        txtsectionn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtsectionn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C" }));
        txtsectionn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsectionnActionPerformed(evt);
            }
        });
        jPanel2.add(txtsectionn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 250, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Licence Issue Date");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, -1, -1));

        txtadddate.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(txtadddate, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, 270, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Email Address");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 360, -1, -1));

        txtaddress.setBackground(new java.awt.Color(204, 204, 204));
        txtaddress.setColumns(20);
        txtaddress.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 13)); // NOI18N
        txtaddress.setRows(5);
        jScrollPane1.setViewportView(txtaddress);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 390, 269, -1));

        txtcnic.setBackground(new java.awt.Color(204, 204, 204));
        txtcnic.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtcnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcnicKeyPressed(evt);
            }
        });
        jPanel2.add(txtcnic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 250, -1));

        txtclass.setBackground(new java.awt.Color(204, 204, 204));
        txtclass.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jPanel2.add(txtclass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 250, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 960, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // email validation

        //to send mail

          

        try {
            String host = "smtp.gmail.com";
            String user = "cscodes.lk@gmail.com";
            String pass = "wauw bsuk jhbz imjl";
            String[] toAddresses = {txtemail.getText(), txtemail.getText(), txtemail.getText()};

            String[] subjects = {
                "Environment Permit Issuing",
                "Environment Permit Issuing - Near Expiry",
                "Environment Permit Issuing - Expired"
            };

            String[] messages = {
                "Congratulations on your successful registration! Your license has been issued, and it is valid for a period of three years from the date of issue. Please make sure to renew your license before it expires to ensure uninterrupted access and usage.",
                "Your license is about to expire within a 1 month. Please renew it to continue using our services. Thank you.",
                "Your license has expired. Please renew it as soon as possible to regain access to our services."
            };

            boolean sessionDebug = true;
            Properties props = System.getProperties();
            props.put("mail.smtp.user", user);
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "465");
            props.put("mail.debug", "true");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.EnableSSL.enable", "true");
            props.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            props.setProperty("mail.smtp.socketFactory.fallback", "false");

            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession = Session.getDefaultInstance(props, null);
            mailSession.setDebug(sessionDebug);

            ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
            
            
            executor.schedule(() -> {
                try {
                    sendEmail(host, user, pass, toAddresses[0], subjects[0], messages[0], mailSession);
                    JOptionPane.showMessageDialog(null, "Registration Email sent.");
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Failed to send 1st email.");
                }
            }, 0, TimeUnit.SECONDS);
            
            
            long delayForSecondEmail = TimeUnit.DAYS.toSeconds(2 * 365 + 10 * 30);
            executor.schedule(() -> {
                try {
                    sendEmail(host, user, pass, toAddresses[1], subjects[1], messages[1], mailSession);
                    //JOptionPane.showMessageDialog(null, "2nd Email sent.");
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Failed to send 2nd email.");
                }
            }, delayForSecondEmail, TimeUnit.SECONDS);
         
            // Send the 3rd email after 50 seconds
            
            long delayForThirdEmail = TimeUnit.DAYS.toSeconds(3 * 365);
            executor.schedule(() -> {
                try {
                    sendEmail(host, user, pass, toAddresses[2], subjects[2], messages[2], mailSession);
                   // JOptionPane.showMessageDialog(null, "3rd Email sent.");
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Failed to send 3rd email.");
                }
            }, delayForThirdEmail, TimeUnit.SECONDS);

            // Continue with other code here without waiting for the emails to be sent.
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Email sending failed.");
        }
  

    


        // to send data into the db
        try {
            //add
            String name=txtsname.getText();
            String fname=txtfname.getText();
            String phone=txtphone.getText();
            SimpleDateFormat date_format =new SimpleDateFormat("yyyy-MM-dd");
            String date=date_format.format(txtdob.getDate());
            String gender =txtgender.getSelectedItem().toString();
            String cllass =txtclass.getText();
            String sectionn =txtsectionn.getSelectedItem().toString();
            SimpleDateFormat date_f=new SimpleDateFormat("yyyy-MM-dd");
            String admission=date_f.format(txtadddate.getDate());
            String cnic =txtcnic.getText();
            String email=txtemail.getText();
            String address=txtaddress.getText();

            pst =con.prepareStatement("insert into student(studentname,fathername,phone,dateofbirth,gender,class,section,admissiondate,cnic,email,address)values(?,?,?,?,?,?,?,?,?,?,?)");
            pst.setString(1, name);
            pst.setString(2, fname);
            pst.setString(3, phone);
            pst.setString(4, date);
            pst.setString(5, gender);
            pst.setString(6, cllass);
            pst.setString (7, sectionn);
            pst.setString(8, admission);
            pst.setString(9, cnic);
            pst.setString(10, email);
            pst.setString(11, address);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Registration Successful");

            txtsname.setText("");
            txtfname.setText("");
            txtphone.setText("");
            txtdob.setDate(null);
            // txtgender.setSelectedIndex(-1);
            txtclass.setText("");
            //  txtsectionn.setSelectedIndex(-1);
            txtadddate.setDate(null);
            txtcnic.setText("");
            txtemail.setText("");
            txtaddress.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(system.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphoneActionPerformed

    private void txtphoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphoneKeyPressed

        // numbers
        char c =evt.getKeyChar();
        if(Character.isLetter(c))
        {
            //txtphone.setEditable(false);
            JOptionPane.showMessageDialog(null, "Invalid.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            txtphone.setEditable(true);
        }
    }//GEN-LAST:event_txtphoneKeyPressed

    private void txtphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphoneKeyTyped
        // phn nb validating

        char c = evt.getKeyChar();
        if (!Character.isDigit(c) || txtphone.getText().length() >= 10) {
            evt.consume(); // Ignore input if it's not a digit or exceeds 10 characters
            if (txtphone.getText().length() >= 10) {
                JOptionPane.showMessageDialog(null, "Only 10-digit phone numbers allowed", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_txtphoneKeyTyped

    private void txtemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyReleased

        // Email validation
        char c = evt.getKeyChar();
        String currentText = txtemail.getText();

        // Append the typed character to the current text
        String newText = currentText + c;

        // Validate the email format
        if (isValidEmailFormat(newText) || c == '\b' || c == KeyEvent.VK_DELETE) {
            // Allow valid email characters, backspace, and delete
        } else {
            // Ignore invalid characters
            txtemail.setText(currentText); // Revert the text field to the previous valid state
        }
    }//GEN-LAST:event_txtemailKeyReleased

    private void txtemailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemailKeyTyped
        // email validatin

    }//GEN-LAST:event_txtemailKeyTyped

    private void txtsectionnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsectionnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsectionnActionPerformed

    private void txtcnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcnicKeyPressed

        // numbers
        char c =evt.getKeyChar();
        if(Character.isLetter(c))
        {
            //txtphone.setEditable(false);
            JOptionPane.showMessageDialog(null, "Invalid.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        { 
            txtcnic.setEditable(true);
        }
    }//GEN-LAST:event_txtcnicKeyPressed

        public static void main(String args[]) {
       
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(system.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(system.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(system.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(system.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new system().setVisible(true);
            }
        });
    } 
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser txtadddate;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JTextField txtclass;
    private javax.swing.JTextField txtcnic;
    private com.toedter.calendar.JDateChooser txtdob;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtfname;
    private javax.swing.JComboBox<String> txtgender;
    private javax.swing.JTextField txtphone;
    private javax.swing.JComboBox<String> txtsectionn;
    private javax.swing.JTextField txtsname;
    // End of variables declaration//GEN-END:variables
}
